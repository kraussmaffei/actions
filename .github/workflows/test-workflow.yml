on: workflow_dispatch
name: Test
jobs:
  ssh-agent:
    name: Run local ssh-agent
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Local Action
        uses: ./ssh-agent
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
  create-and-update-deployment:
    name: Run local create-deployment
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Create deployment
        id: create-deployment
        uses: ./create-deployment
        with:
          github-token: ${{ secrets.DEPLOY_TOKEN }}
          ref: main
          task: deploy
          auto-merge: false
          required-contexts: ""
          payload: ""
          environment: test
          description: ""
          production-environment: false
          transient-environment: false
      - name: Create deployment status
        uses: ./create-deployment-status
        with:
          github-token: ${{ secrets.DEPLOY_TOKEN }}
          deployment-id: ${{ steps.create-deployment.outputs.deployment-id }}
          state: success
  remove-deployment:
    needs: create-and-update-deployment
    name: Run local remove-deployment
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Local Action
        uses: ./remove-deployment
        with:
          github-token: ${{ secrets.DEPLOY_TOKEN }}
          environment: test
  configure-aws-credentials:
    name: Configure AWS credentials
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Local Action
        uses: ./configure-aws-credentials
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-profile: sp-exp-1
  json-property:
    name: Get JSON Property
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Local Action
        id: json-property
        uses: ./json-property
        with:
          path: ./test.json
          prop_path: test_nested.test
      - run: echo $test_nested_test
  create-workflow-dispatch:
    name: Run local workflow dispatch
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Local Action
        uses: ./create-workflow-dispatch
        with:
          ref: main
          github-token: ${{ secrets.DEPLOY_TOKEN }}
          workflow-id: lint-and-package-workflow.yml
          inputs: '{"test": "true"}'
  semantic-version:
    name: "Test and Run"
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: NPM Install
        run: npm ci
      - name: Test
        run: npm test
      - name: Package
        run: npm run package
      - name: Run Action
        uses: ./semantic-version
        id: run
  download-artifact-from-workflow:
    name: Run local download artifact
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download Artifact
        uses: ./download-artifact-from-workflow
        with:
          workflow-run-id: ${{ github.run_id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
