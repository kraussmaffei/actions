name: "Build and Push Python Package"
description: "Builds and pushes a python package from the given source. The package will be pushed to codeartifact"
inputs:
  aws-access-key-id:
    description: "Path of the python package under quality test."
    required: true
  aws-secret-access-key:
    description: "Path of the python package under quality test."
    required: true
  aws-region:
    description: "Region of the aws account"
    required: true
  codeartifact-domain:
    description: "Domain of the aws codeartifact repository."
    required: true
  codeartifact-domain-owner:
    description: "The account id of the owner of the domain."
    required: true
  codeartifact-repository:
    description: "The aws codeartifact repository."
    required: true
  codeartifact-upstream-repository:
    description: "The aws codeartifact upstream repository."
    required: true
# outputs:
#   total-test-coverage:
#     description: "The total test coverage of the python project"
#     value: ${{ steps.coverage-calculator.outputs.total-coverage }}
runs:
  using: "composite"
  steps:
    - name: Install required tools
      shell: bash
      run: |
        pip install python-semantic-release poetry

    - name: Build and publish python package...
      shell: bash
      env:
        AWS_ACCESS_KEY_ID: ${{ inputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws-secret-access-key }}
      run: |
        echo Logging in to codeartifact...
        CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token \
          --domain ${{ inputs.codeartifact-domain }} \
          --domain-owner ${{ inputs.codeartifact-domain-owner }} \
          --query authorizationToken \
          --output text)

        INDEX_URL=$(aws codeartifact get-repository-endpoint \
          --domain ${{ inputs.codeartifact-domain }} \
          --domain-owner ${{ inputs.codeartifact-domain-owner }} \
          --repository ${{ inputs.codeartifact-repository }} \
          --format pypi --query repositoryEndpoint \
          --output text)

        EXTRA_INDEX_URL=$(aws codeartifact get-repository-endpoint \
          --domain ${{ inputs.codeartifact-domain }} \
          --domain-owner ${{ inputs.codeartifact-domain-owner }} \
          --repository ${{ inputs.codeartifact-upstream-repository }} \
          --format pypi --query repositoryEndpoint \
          --output text)

        # ----------------------------------------------------------------------------- #

        echo Configuring pip...
        pip config unset global.index-url

        pip config set global.index-url \
        https://aws:$CODEARTIFACT_AUTH_TOKEN@${{ inputs.codeartifact-domain }}-${{ inputs.codeartifact-domain-owner }} \
          .d.codeartifact.${{ inputs.aws-region }}.amazonaws.com/pypi/${{ inputs.codeartifact-repository }}/simple/

        pip config set global.extra-index-url \
        https://aws:$CODEARTIFACT_AUTH_TOKEN@${{ inputs.codeartifact-domain }}-${{ inputs.codeartifact-domain-owner }} \
          .d.codeartifact.${{ inputs.aws-region }}.amazonaws.com/pypi/${{ inputs.codeartifact-upstream-repository }}/simple/

        # ----------------------------------------------------------------------------- #

        echo Configuring twine...
        TWINE_USERNAME=aws
        TWINE_PASSWORD=${CODEARTIFACT_AUTH_TOKEN}
        TWINE_REPOSITORY_URL=${INDEX_URL}

        # ----------------------------------------------------------------------------- #

        echo Configuring git...
        git config --global user.name 'km-machine-user'
        git config --global user.email 'km.machine.user@gmx.de'

        # "semantic-release publish"
