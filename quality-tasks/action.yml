name: 'Run quality tasks'
description: 'Runs all the necessary quality task for a given python project.'
inputs:
  python-package-path:
    description: 'Path of the python package under quality test.'
    required: true
outputs:
  total-test-coverage:
    description: "The total test coverage of the python project"
    value: ${{ steps.coverage-calculator.outputs.total-coverage }}
runs:
  using: "composite"
  steps:
    - name: Install required tools
      shell: bash
      run: |
        pip install coverage flake8

    - name: Running flake8 linter...
      shell: bash
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Running coverage calculation...
      id: coverage-calculator
      shell: bash
      run: |
        coverage run --source=${{ inputs.python-package-path }} -m unittest discover -s tests -p 'test*.py'
        echo "::set-output name=total-coverage::$(coverage report -m | grep -o -E 'TOTAL.+ ([0-9]{1,3}%)' | grep -o -E '([0-9]{1,3}%)' | grep -o -E '([0-9]+)')"
